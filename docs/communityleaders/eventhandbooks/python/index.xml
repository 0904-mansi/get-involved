<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> – Python</title>
    <link>/docs/communityleaders/eventhandbooks/python/</link>
    <description>Recent content in Python on </description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/communityleaders/eventhandbooks/python/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Event Checklist</title>
      <link>/docs/communityleaders/eventhandbooks/python/checklists/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/checklists/</guid>
      <description>
        
        
        &lt;h2 id=&#34;before-the-workshop&#34;&gt;Before the workshop&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Step #&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#getting-familiar-with-bevy-virtual&#34;&gt;Getting Familiar with Bevy Virtual&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#planning-an-event-agenda&#34;&gt;Planning an Event Agenda&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#setting-up-event-registration-page&#34;&gt;Setting up Event Registration Page&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#sending-confirmation-email-for-workshop&#34;&gt;Sending confirmation email for workshop&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;during-the-workshop&#34;&gt;During the workshop&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Step #&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#conducting-attendee-survey&#34;&gt;Conducting Attendee Survey&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;after-the-workshop&#34;&gt;After the workshop&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Step #&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#post-event-followup&#34;&gt;Post-Event FollowUp&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#community-leader-survey&#34;&gt;Community Leader Survey&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;#attendee-survey&#34;&gt;Attendee Survey&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;getting-familiar-with-bevy-virtual&#34;&gt;Getting Familiar with Bevy Virtual&lt;/h2&gt;
&lt;p&gt;Docker community leaders uses Bevy (&lt;a href=&#34;https://events.docker.com&#34;&gt;https://events.docker.com&lt;/a&gt;) tool to conduct virtual Meetup events. Bevy is the tool that provides the MOST features to your Community, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2 way integration with Meetup.com (create your event in Bevy and it posts to your meetup page and RSVPs from your event on meetup sync with your Bevy events.docker.com page).
Note: The RSVP limits you set in Bevy do not translate to meetup. The best way to handle this is to keep a watchful eye on both platforms or communicate that seats are first come first serve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ability to check in guests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mobile App&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSVP as Guest&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forms / Surveys&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Automatic Emails (customizable)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s important for all community leaders to be familiar with this tool to conduct virtual events successfully.&lt;/p&gt;
&lt;h3 id=&#34;events---analytics&#34;&gt;Events |  Analytics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/344-create-a-new-event&#34;&gt;Create a new event&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/428-virtual-event-type&#34;&gt;Virtual Event Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/389-manage-chapter-members&#34;&gt;Manage chapter members&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bevy-virtual&#34;&gt;Bevy Virtual&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/457-using-bevy-virtual&#34;&gt;Using Bevy Virtual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/496-test-event-in-bevy-virtual&#34;&gt;How to create a test event in Bevy Virtual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/470-record-in-bevy-virtual&#34;&gt;Record in Bevy Virtual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/492-screensharing-in-bevy-virtual&#34;&gt;Screensharing in Bevy Virtual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/495-breakout-rooms&#34;&gt;Breakout Rooms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.bevylabs.com/article/519-chat-features&#34;&gt;Chat, DM&amp;rsquo;s &amp;amp; Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;planning-an-event-agenda&#34;&gt;Planning an Event Agenda&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Your event must be posted on your &lt;a href=&#34;https://events.docker.com/chapters/&#34;&gt;city’s Chapter page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Try to create event 1 month before the event&lt;/li&gt;
&lt;li&gt;If you are unsure of how to use your chapter page &lt;a href=&#34;https://drive.google.com/file/d/1ld54sqzTTBMiygUzsjRD7B10XzWozbMl/view?usp=sharing&#34;&gt;please watch this video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you are having issues with your page, do not have a page or need admin permissions please contact William over Docker community Slack or send email to william.quiviger(AT)docker.com&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setting-up-event-registration-page&#34;&gt;Setting up Event Registration Page&lt;/h2&gt;
&lt;p&gt;Every Community leader is expected to set up event registration page. While building an event registration page, ensure that the below list of information are captured:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Title of the workshop&lt;/li&gt;
&lt;li&gt;Date of the workshop&lt;/li&gt;
&lt;li&gt;Short Description of the workshop&lt;/li&gt;
&lt;li&gt;Format of the workshop(whether it will be LIVE or recorded)&lt;/li&gt;
&lt;li&gt;Level of the audience(Beginners/Intermediate/Advanced)&lt;/li&gt;
&lt;li&gt;Name of the speakers&lt;/li&gt;
&lt;li&gt;A Form which ask users to supply:
&lt;ul&gt;
&lt;li&gt;First Name&lt;/li&gt;
&lt;li&gt;Last Name&lt;/li&gt;
&lt;li&gt;Email Address&lt;/li&gt;
&lt;li&gt;Company Name&lt;/li&gt;
&lt;li&gt;Job Function&lt;/li&gt;
&lt;li&gt;Country&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sending-confirmation-email-for-workshop&#34;&gt;Sending confirmation email for workshop&lt;/h2&gt;
&lt;p&gt;Once the user register for the event, Community Leaders need to ensure that the interested users should receive a confirmation email.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Thank you message for registering for this event&lt;/li&gt;
&lt;li&gt;Ensure that the registered user should be able to add the events date to their calendar&lt;/li&gt;
&lt;li&gt;The email should carry workshop title and date of the workshop&lt;/li&gt;
&lt;li&gt;Gentle reminder as the date of workshop come closer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sample-confirmation-email-for-the-workshop&#34;&gt;Sample Confirmation email for the workshop&lt;/h3&gt;
&lt;h2 id=&#34;post-event-followup&#34;&gt;Post-Event Followup&lt;/h2&gt;
&lt;h3 id=&#34;1--send-a-thank-you-email&#34;&gt;#1  Send a Thank You email&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S.No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;“Thank you for attending” post on the social media channels&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;ldquo;Thank you&amp;rdquo; email to all those who registered and attended the event&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Share the pics you took during the event and share it on social media(LinkedIn, Twitter, Facebook Public Docker Group etc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Send thanks email to sponsor/vendors if this workshop is part of the Meetup event.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thank core team and volunteers who helped you with the workshop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;2-post-event-review&#34;&gt;#2 Post-event Review&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S.No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sit down with your team for a debrief session where you discuss how the event went&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Consider inviting at least some of the volunteers.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Evaluate whether the event was a success according to whatever goals you’ve set&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Have an open discussion about what worked well and what could be done better the next time around.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sit down with your team for a debrief session where you discuss how the event went&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3-ask-for-feedback&#34;&gt;#3 Ask for feedback&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S.No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;While the event is still fresh in everyone’s mind, get their feedback about it.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Be straightforward. Collect input is to send out an email link to a survey that people can fill out online.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pick the one you like. If you can, add an incentive (free tickets to your next events, chance to win a gift card, and the like.).&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Having everyone fill out the same survey makes it easy to compare their input and spot trends and areas that need improvement.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;4--follow-up-on-social-media&#34;&gt;#4  Follow up on social media&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S.No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Online chatter about your event won’t immediately quiet down after the event is over.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Follow the conversation and jump in where it make sense to chip in with your input, thank the guests, or answer questions.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Engaging in post-event social media chatter and keeping the buzz going will also help you build audience for your next event.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Online chatter about your event won’t immediately quiet down after the event is over.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;5-start-planning-your-next-event&#34;&gt;#5 Start planning your next event&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S.No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Objectives&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Start putting all of that to good use and begin jotting down ideas for your next fantastic event&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Agenda</title>
      <link>/docs/communityleaders/eventhandbooks/python/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/agenda/</guid>
      <description>
        
        
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Timing&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Welcome&lt;/td&gt;
&lt;td&gt;8:45 AM to 9:00 AM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;../prerequisite/&#34;&gt;Installing Python&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;9:00 AM to 9:30 AM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;../basics/&#34;&gt;Basics of Docker&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;9:30 AM to 10:30 AM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;../building/&#34;&gt;Building and Running a Docker Container&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;10:30 AM to 11:30 AM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Coffee/Tea Break&lt;/td&gt;
&lt;td&gt;11:30 AM to 11:45 AM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;../pythonapp/&#34;&gt;Dockerize your first Python Application&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;11:45 AM to 1:00 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lunch&lt;/td&gt;
&lt;td&gt;1:00 PM to 2:00 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;../compose/&#34;&gt;Dockerize Multi-Container Python Application Using Docker Compose - Part 1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2:00 PM to 3:00 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Coffee/Tea Break&lt;/td&gt;
&lt;td&gt;3: PM to 3:45 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;../compose/&#34;&gt;Dockerize Multi-Container Python Application Using Docker Compose - Part 2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;3:45 PM to 5:00 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quiz/Prize/Certificate Distribution&lt;/td&gt;
&lt;td&gt;5:00 PM to 5:30 PM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Prerequisite</title>
      <link>/docs/communityleaders/eventhandbooks/python/prerequisite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/prerequisite/</guid>
      <description>
        
        
        &lt;h2 id=&#34;setup-environment&#34;&gt;Setup Environment&lt;/h2&gt;
&lt;p&gt;This section describes the hardware and software needed for this workshop, and how to configure them.
This workshop is designed for a BYOL (Bring Your Own Laptop) style hands-on-lab.&lt;/p&gt;
&lt;h3 id=&#34;hardware--software&#34;&gt;Hardware &amp;amp; Software&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Memory: At least 4 GB+, strongly preferred 8 GB&lt;/li&gt;
&lt;li&gt;Operating System: Mac OS X (10.10.3+), Windows 10 Pro+ 64-bit, Ubuntu 12+, CentOS 7+.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-docker&#34;&gt;Install Docker&lt;/h3&gt;
&lt;p&gt;Docker runs natively on Mac, Windows and Linux.
This lab will use &lt;a href=&#34;https://www.docker.com/community-edition&#34;&gt;Docker Community Edition (CE)&lt;/a&gt;.
Download the Docker CE edition for your machine from the &lt;a href=&#34;https://store.docker.com/search?type=edition&amp;amp;offering=community&#34;&gt;Docker Store&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Docker CE requires a fairly recent operating system version.
If your machine does not meet the requirements, then you need to install &lt;a href=&#34;https://www.docker.com/products/docker-toolbox&#34;&gt;Docker Toolbox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This workshop is tested with Docker Community Edition &lt;code&gt;19.03.13-ce-rc10, build fec3683&lt;/code&gt; on Ubuntu &lt;code&gt;20.04.1 LTS&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;other-software&#34;&gt;Other Software&lt;/h3&gt;
&lt;p&gt;The softwares in this section are specific to certain parts of the workshop.
Install them only if you plan to attempt them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href=&#34;https://git-scm.com&#34;&gt;git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and install a code editor of your choice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/pycharm/download/&#34;&gt;PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sublimetext.com/3&#34;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download and install Python IDE of your choice:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S.No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name of Software&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Link to Follow&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Git&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://git-scm.com&#34;&gt;Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Python&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;hhttps://www.python.org/downloads/&#34;&gt;Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Visual Studio Code&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PyCharm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.jetbrains.com/pycharm/download/&#34;&gt;Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sublime Text 3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://www.sublimetext.com/3&#34;&gt;Link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;download-python&#34;&gt;Download Python&lt;/h1&gt;
&lt;p&gt;You can download the latest version of Python from the below links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/windows/&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/mac-osx/&#34;&gt;MacOS &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/source/&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/source/&#34;&gt;Using Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;install-python&#34;&gt;Install Python&lt;/h1&gt;
&lt;p&gt;Select the tab for your computer&amp;rsquo;s operating system below, then follow its installation instructions.&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;install-python&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#install-python-0&#34; role=&#34;tab&#34; aria-controls=&#34;install-python-0&#34; aria-selected=&#34;true&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#install-python-1&#34; role=&#34;tab&#34; aria-controls=&#34;install-python-1&#34;&gt;Mac&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#install-python-2&#34; role=&#34;tab&#34; aria-controls=&#34;install-python-2&#34;&gt;Windows&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;install-python&#34;&gt;&lt;div id=&#34;install-python-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;install-python-0&#34;&gt;

&lt;p&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Open the terminal check if Python is already installed by using the following command. If it&amp;rsquo;s already above 3.7 skip the next steps&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;python3 --version
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Install Python using apt-get&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install python3.8
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Verify that you&amp;rsquo;ve installed Python by opening a command prompt and typing the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
$ python3.8 --version

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Confirm that the command prints the installed version of Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;div id=&#34;install-python-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;install-python-1&#34;&gt;

&lt;p&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Open the terminal check if Python is already installed by using the following command. If it&amp;rsquo;s already above 3.7 skip the next steps&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;python3 --version
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Go to &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python&amp;rsquo;s official downlaod page&lt;/a&gt; and click on download.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Once the pkg file is downloaded open it and follow the installation steps&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;On completetion open terminal to verify if the installation is successful using the following command&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;python3 --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div id=&#34;install-python-2&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;install-python-2&#34;&gt;

&lt;p&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest version of Python from &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Open the downloaded installer file. Ensure that you check &lt;code&gt;Add Python 3.x to PATH&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Click on &lt;code&gt;Install Now&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;In the Command Prompt window that appears, type the following command: &lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
$ python3 --version

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Confirm that the command prints the installed version of Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Basics of Docker</title>
      <link>/docs/communityleaders/eventhandbooks/python/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/basics/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#main-components-of-docker-system&#34;&gt;Main Components of Docker System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#test-your-knowledge&#34;&gt;Test Your Knowledge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;basics-of-docker&#34;&gt;Basics of Docker&lt;/h2&gt;
&lt;p&gt;This section introduces the basic terminology of Docker.&lt;/p&gt;
&lt;p&gt;Docker is a platform for developers and sysadmins to build, ship, and run applications. Docker lets you quickly assemble applications from components and eliminates the friction that can come when shipping code. Docker lets you test and deploy your code into production as fast as possible.&lt;/p&gt;
&lt;p&gt;Docker simplifies software delivery by making it easy to build and share images that contain your application’s entire environment, or &lt;em&gt;application operating system&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;what-does-it-mean-by-an-application-operating-system-&#34;&gt;What does it mean by an application operating system ?&lt;/h2&gt;
&lt;p&gt;Your application typically requires a specific version of operating system, application server, runtime, and database server. It may also require configuration files, and multiple other dependencies. The application may need binding to specific ports and certain amount of memory. The components and configuration together required to run your application is what is referred to as application operating system.&lt;/p&gt;
&lt;p&gt;You can certainly provide an installation script that will download and install these components. Docker simplifies this process by allowing to create an image that contains your application and infrastructure together, managed as one component. These images are then used to create Docker containers which run on the container virtualization platform, provided by Docker.&lt;/p&gt;
&lt;h2 id=&#34;main-components-of-docker-system&#34;&gt;Main Components of Docker System&lt;/h2&gt;
&lt;p&gt;Docker has three main components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Images are the &lt;em&gt;build component&lt;/em&gt; of Docker and are the read-only templates defining an application operating system.&lt;/li&gt;
&lt;li&gt;Containers are the &lt;em&gt;run component&lt;/em&gt; of Docker and created from images. Containers can be run, started, stopped, moved, and deleted.&lt;/li&gt;
&lt;li&gt;Images are stored, shared, and managed in a registry and are the &lt;em&gt;distribution component&lt;/em&gt; of Docker.&lt;/li&gt;
&lt;li&gt;DockerHub is a publicly available registry and is available at &lt;a href=&#34;http://hub.docker.com&#34;&gt;http://hub.docker.com&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order for these three components to work together, the &lt;em&gt;Docker Daemon&lt;/em&gt; (or Docker Engine) runs on a host machine and does the heavy lifting of building, running, and distributing Docker containers. In addition, the &lt;em&gt;Client&lt;/em&gt; is a Docker binary which accepts commands from the user and communicates back and forth with the Engine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;docker-architecture.png&#34; alt=&#34;docker-architecture&#34;&gt;&lt;/p&gt;
&lt;p&gt;The Client communicates with the Engine that is either co-located on the same host or on a different host. Client uses the &lt;code&gt;pull&lt;/code&gt; command to request the Engine to pull an image from the registry. The Engine then downloads the image from Docker Store, or whichever registry is configured. Multiple images can be downloaded from the registry and installed on the Engine. Client uses the &lt;code&gt;run&lt;/code&gt; run the container.&lt;/p&gt;
&lt;h2 id=&#34;docker-image&#34;&gt;Docker Image&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ve already seen that Docker images are read-only templates from which Docker containers are launched. Each image consists of a series of layers. Docker makes use of union file systems to combine these layers into a single image. Union file systems allow files and directories of separate file systems, known as branches, to be transparently overlaid, forming a single coherent file system.&lt;/p&gt;
&lt;p&gt;One of the reasons Docker is so lightweight is because of these layers. When you change a Docker image—for example, update an application to a new version— a new layer gets built. Thus, rather than replacing the whole image or entirely rebuilding, as you may do with a virtual machine, only that layer is added or updated. Now you don&amp;rsquo;t need to distribute a whole new image, just the update, making distributing Docker images faster and simpler.&lt;/p&gt;
&lt;p&gt;Every image starts from a base image, for example &lt;code&gt;ubuntu&lt;/code&gt;, a base Ubuntu image, or &lt;code&gt;fedora&lt;/code&gt;, a base Fedora image. You can also use images of your own as the basis for a new image, for example if you have a base Apache image you could use this as the base of all your web application images.&lt;/p&gt;
&lt;p&gt;NOTE: By default, Docker obtains these base images from Docker Store.&lt;/p&gt;
&lt;p&gt;Docker images are then built from these base images using a simple, descriptive set of steps we call instructions. Each instruction creates a new layer in our image. Instructions include actions like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run a command&lt;/li&gt;
&lt;li&gt;Add a file or directory&lt;/li&gt;
&lt;li&gt;Create an environment variable&lt;/li&gt;
&lt;li&gt;Run a process when launching a container&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These instructions are stored in a file called a Dockerfile. Docker reads this Dockerfile when you request a build of an image, executes the instructions, and returns a final image.&lt;/p&gt;
&lt;h2 id=&#34;docker-container&#34;&gt;Docker Container&lt;/h2&gt;
&lt;p&gt;A container consists of an operating system, user-added files, and meta-data. As we&amp;rsquo;ve seen, each container is built from an image. That image tells Docker what the container holds, what process to run when the container is launched, and a variety of other configuration data. The Docker image is read-only. When Docker runs a container from an image, it adds a read-write layer on top of the image (using a union file system as we saw earlier) in which your application can then run.&lt;/p&gt;
&lt;h2 id=&#34;docker-engine&#34;&gt;Docker Engine&lt;/h2&gt;
&lt;p&gt;Docker Host is created as part of installing Docker on your machine. Once your Docker host has been created, it then allows you to manage images and containers. For example, the image can be downloaded and containers can be started, stopped and restarted.&lt;/p&gt;
&lt;h3 id=&#34;docker-client&#34;&gt;Docker Client&lt;/h3&gt;
&lt;p&gt;The client communicates with the Docker Host and let&amp;rsquo;s you work with images and containers.&lt;/p&gt;
&lt;p&gt;Check if your client is working using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It shows the output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Docker version 20.10.2, build 2291f61
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NOTE: The exact version may differ based upon how recently the installation was performed.&lt;/p&gt;
&lt;p&gt;The exact version of Client and Server can be seen using &lt;code&gt;docker version&lt;/code&gt; command. This shows the output as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; docker version
Client: Docker Engine - Community
 Cloud integration: 1.0.7
 Version:           20.10.2
 API version:       1.41
 Go version:        go1.13.15
 Git commit:        2291f61
 Built:             Mon Dec 28 16:12:42 2020
 OS/Arch:           darwin/amd64
 Context:           default
 Experimental:      true

Server: Docker Engine - Community
 Engine:
  Version:          20.10.2
  API version:      1.41 (minimum version 1.12)
  Go version:       go1.13.15
  Git commit:       8891c58
  Built:            Mon Dec 28 16:15:28 2020
  OS/Arch:          linux/amd64
  Experimental:     true
 containerd:
  Version:          1.4.3
  GitCommit:        269548fa27e0089a8b8278fc4fc781d7f65a939b
 runc:
  Version:          1.0.0-rc92
  GitCommit:        ff819c7e9184c13b7c2607fe6c30ae19403a7aff
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0
ajeetraina@Ajeets-MacBook-Pro realtime-sensor-jetson % 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The complete set of commands can be seen using &lt;code&gt;docker --help&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;test-your-knowledge&#34;&gt;Test Your Knowledge&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;S. No.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Question.&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Response&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;What is difference between Docker Image and Docker Container?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Where are all Docker images stored?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Is DockerHub a public or private Docker registry?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;What is the main role of Docker Engine?&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Building and Running a Docker Container</title>
      <link>/docs/communityleaders/eventhandbooks/python/building/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/building/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#build-a-docker-image&#34;&gt;Build a Docker Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#run-a-docker-container&#34;&gt;Running a Docker Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-python-application&#34;&gt;Example Python Application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;build-a-docker-image&#34;&gt;Build a Docker Image&lt;/h2&gt;
&lt;p&gt;This section explains how to create a Docker image.&lt;/p&gt;
&lt;h2 id=&#34;dockerfile&#34;&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;Docker build images by reading instructions from a &lt;em&gt;Dockerfile&lt;/em&gt;. A &lt;em&gt;Dockerfile&lt;/em&gt; is a text document that contains all the commands a user could call on the command line to assemble an image. &lt;code&gt;docker image build&lt;/code&gt; command uses this file and executes all the commands in succession to create an image.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;build&lt;/code&gt; command is also passed a context that is used during image creation. This context can be a path on your local filesystem or a URL to a Git repository.&lt;/p&gt;
&lt;p&gt;Dockerfile is usually called Dockerfile. The complete list of commands that can be specified in this file are explained at &lt;a href=&#34;https://docs.docker.com/reference/builder/&#34;&gt;https://docs.docker.com/reference/builder/&lt;/a&gt;. The common commands are listed below:&lt;/p&gt;
&lt;h2 id=&#34;common-commands-for-dockerfile&#34;&gt;Common commands for Dockerfile&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Command&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Purpose&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;FROM&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;First non-comment instruction in &lt;em&gt;Dockerfile&lt;/em&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;FROM ubuntu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;COPY&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Copies mulitple source files from the context to the file system of the container at the specified path&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;COPY .bash_profile /home&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ENV&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sets the environment variable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ENV HOSTNAME=test&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RUN&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Executes a command&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;RUN apt-get update&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;CMD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Defaults for an executing container&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;CMD [&amp;quot;/bin/echo&amp;quot;, &amp;quot;hello world&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;EXPOSE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Informs the network ports that the container will listen on&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;EXPOSE 8093&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;==================&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;create-your-first-image&#34;&gt;Create your first image&lt;/h2&gt;
&lt;p&gt;Create a new directory &lt;code&gt;hellodocker&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In that directory, create a new text file &lt;code&gt;Dockerfile&lt;/code&gt;. Use the following contents:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FROM ubuntu:latest

CMD [&amp;quot;/bin/echo&amp;quot;, &amp;quot;hello world&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This image uses &lt;code&gt;ubuntu&lt;/code&gt; as the base image. &lt;code&gt;CMD&lt;/code&gt; command defines the command that needs to run. It provides a different entry point of &lt;code&gt;/bin/echo&lt;/code&gt; and an argument &amp;ldquo;&lt;code&gt;hello world&lt;/code&gt;&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;build-the-image&#34;&gt;Build the image&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;  docker image build . -t helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;.&lt;/code&gt; in this command is the context for the command &lt;code&gt;docker image build&lt;/code&gt;. &lt;code&gt;-t&lt;/code&gt; adds a tag to the image.&lt;/p&gt;
&lt;p&gt;The following output is shown:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Sending build context to Docker daemon  2.048kB
Step 1/2 : FROM ubuntu:latest
latest: Pulling from library/ubuntu
9fb6c798fa41: Pull complete 
3b61febd4aef: Pull complete 
9d99b9777eb0: Pull complete 
d010c8cf75d7: Pull complete 
7fac07fb303e: Pull complete 
Digest: sha256:31371c117d65387be2640b8254464102c36c4e23d2abe1f6f4667e47716483f1
Status: Downloaded newer image for ubuntu:latest
 ---&amp;gt; 2d696327ab2e
Step 2/2 : CMD /bin/echo hello world
 ---&amp;gt; Running in 9356a508590c
 ---&amp;gt; e61f88f3a0f7
Removing intermediate container 9356a508590c
Successfully built e61f88f3a0f7
Successfully tagged helloworld:latest
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;list-the-images&#34;&gt;List the images&lt;/h2&gt;
&lt;p&gt;You can list the images available using &lt;code&gt;docker image ls&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
helloworld          latest              e61f88f3a0f7        3 minutes ago       122MB
ubuntu              latest              2d696327ab2e        4 days ago          122MB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Other images may be shown as well but we are interested in these two images for now.&lt;/p&gt;
&lt;p&gt;Run the container using the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker container run helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to see the output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hello world
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you do not see the expected output, check your Dockerfile that the content exactly matches as shown above. Build the image again and now run it.&lt;/p&gt;
&lt;p&gt;Change the base image from &lt;code&gt;ubuntu&lt;/code&gt; to &lt;code&gt;busybox&lt;/code&gt; in &lt;code&gt;Dockerfile&lt;/code&gt;. Build the image again:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker image build -t helloworld:2 .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and view the images using &lt;code&gt;docker image ls&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
helloworld          2                   7fbedda27c66        3 seconds ago       1.13MB
helloworld          latest              e61f88f3a0f7        5 minutes ago       122MB
ubuntu              latest              2d696327ab2e        4 days ago          122MB
busybox             latest              54511612f1c4        9 days ago          1.13MB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;helloworld:2&lt;/code&gt; is the format that allows to specify the image name and assign a tag/version to it separated by &lt;code&gt;:&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;example-python-application&#34;&gt;Example Python Application&lt;/h2&gt;
&lt;p&gt;Create a file &lt;code&gt;app.py&lt;/code&gt; file with the following content:


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/simple-app/app.py&#34; download=&#34;/Python/simple-app/app.py&#34;&gt;&lt;code&gt;/Python/simple-app/app.py&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonsimple-appapppy&#39;)&#34; title=&#34;Copy /Python/simple-app/app.py to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonsimple-appapppy&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;flask&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flask&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;__name__&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@app.route&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Why you should run it at 0.0.0.0&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# https://stackoverflow.com/questions/30323224/deploying-a-minimal-flask-app-in-docker-server-connection-issues&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;The above file needs python flask to run. Add flask to requirements.txt file&lt;/p&gt;


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/simple-app/requirements.txt&#34; download=&#34;/Python/simple-app/requirements.txt&#34;&gt;&lt;code&gt;/Python/simple-app/requirements.txt&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonsimple-apprequirementstxt&#39;)&#34; title=&#34;Copy /Python/simple-app/requirements.txt to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonsimple-apprequirementstxt&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;flask==2.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Now that we have our server, let’s set about writing our Dockerfile and construct a container in where our Python application will live.&lt;/p&gt;
&lt;p&gt;Create Dockerfile with following content:


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/simple-app/Dockerfile&#34; download=&#34;/Python/simple-app/Dockerfile&#34;&gt;&lt;code&gt;/Python/simple-app/Dockerfile&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonsimple-appdockerfile&#39;)&#34; title=&#34;Copy /Python/simple-app/Dockerfile to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonsimple-appdockerfile&#34;&gt;
    &lt;pre&gt;&lt;code&gt;FROM python:3.8-alpine
RUN mkdir /app
ADD . /app
WORKDIR /app
RUN pip install -r requirements.txt
CMD [&amp;#34;python&amp;#34;, &amp;#34;app.py&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Now that we have defined everything we need for our Python application to run in our Dockerfile we can now build an image using this file. In order to do that, we’ll need to run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker build -t my-python-app .
Sending build context to Docker daemon   5.12kB
Step 1/6 : FROM FROM python:3.8-alpine
 ---&amp;gt; d4953956cf1e
Step 2/6 : RUN mkdir /app
 ---&amp;gt; Using cache
 ---&amp;gt; be346f9ff24f
Step 3/6 : ADD . /app
 ---&amp;gt; eb420da7413c
Step 4/6 : WORKDIR /app
 ---&amp;gt; Running in d623a88e4a00
Removing intermediate container d623a88e4a00
 ---&amp;gt; ffc439c5bec5
Step 5/6 : RUN pip install -r requirements.txt  
 ---&amp;gt; Running in 15805f4f7685
Removing intermediate container 15805f4f7685
 ---&amp;gt; 31828faf8ae4
Step 6/6 : CMD [&amp;quot;python&amp;quot;, &amp;quot;./app.py&amp;quot;]
 ---&amp;gt; Running in 9d54463b7e84
Removing intermediate container 9d54463b7e84
 ---&amp;gt; 3f9244a1a240
Successfully built 3f9244a1a240
Successfully tagged my-python-app:latest
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can now verify that our image exists on our machine by using &lt;code&gt;docker images&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker images
REPOSITORY                                 TAG                 IMAGE ID            CREATED             SIZE
my-python-app                             latest              3f9244a1a240        2 minutes ago       355MB$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order to run this newly created image, we can use the docker run command and pass in the ports we want to map to and the image we wish to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -p 8000:5000 -it my-python-app
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p 8000:5000&lt;/code&gt; - This exposes our application which is running on port 5000 within our container on http://localhost:8000 on our local machine.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-it&lt;/code&gt; - This flag specifies that we want to run this image in interactive mode with a tty for this container process.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;my-python-app &lt;/code&gt; - This is the name of the image that we want to run in a container.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Awesome! Now if you go to &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; in your browser, you should see that the application is responds with &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-container-in-background&#34;&gt;Run Container in Background&lt;/h3&gt;
&lt;p&gt;You’ll notice that if we &lt;code&gt;ctrl-c&lt;/code&gt; this within the terminal, it will kill the container. If we want to have it run permanently in the background, you can replace &lt;code&gt;-it&lt;/code&gt; with &lt;code&gt;-d &lt;/code&gt; to run this container in detached mode.&lt;/p&gt;
&lt;p&gt;In order to view the list of containers running in the background you can use docker ps which should output something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
70fcc9195865        my-python-app      &amp;quot;python app.py&amp;quot;          5 seconds ago       Up 3 seconds        0.0.0.0:8080-&amp;gt;8081/tcp   silly_swirles
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Dockerize Your First Python Application</title>
      <link>/docs/communityleaders/eventhandbooks/python/pythonapp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/pythonapp/</guid>
      <description>
        
        
        &lt;p&gt;Create the app.py file with the following content:


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/pythonapp/app.py&#34; download=&#34;/Python/pythonapp/app.py&#34;&gt;&lt;code&gt;/Python/pythonapp/app.py&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonpythonappapppy&#39;)&#34; title=&#34;Copy /Python/pythonapp/app.py to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonpythonappapppy&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;flask&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flask&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;__name__&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@app.route&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Why you should run it at 0.0.0.0&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# https://stackoverflow.com/questions/30323224/deploying-a-minimal-flask-app-in-docker-server-connection-issues&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Now that we have our server, let’s set about writing our Dockerfile and constructing the container in where our newly born Python application will live.&lt;/p&gt;
&lt;p&gt;create dockerfile with following content:


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/pythonapp/Dockerfile&#34; download=&#34;/Python/pythonapp/Dockerfile&#34;&gt;&lt;code&gt;/Python/pythonapp/Dockerfile&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonpythonappdockerfile&#39;)&#34; title=&#34;Copy /Python/pythonapp/Dockerfile to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonpythonappdockerfile&#34;&gt;
    &lt;pre&gt;&lt;code&gt;FROM python:3.8-alpine
RUN mkdir /app
ADD . /app
WORKDIR /app
RUN pip install -r requirements.txt
CMD [&amp;#34;python&amp;#34;, &amp;#34;app.py&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Now that we have defined everything we need for our Python application to run in our Dockerfile we can now build an image using this file. In order to do that, we’ll need to run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker build -t my-python-app .
Sending build context to Docker daemon   5.12kB
Step 1/6 : FROM python:3.8-alpine
 ---&amp;gt; d4953956cf1e
Step 2/6 : RUN mkdir /app
 ---&amp;gt; Using cache
 ---&amp;gt; be346f9ff24f
Step 3/6 : ADD . /app
 ---&amp;gt; eb420da7413c
Step 4/6 : WORKDIR /app
 ---&amp;gt; Running in d623a88e4a00
Removing intermediate container d623a88e4a00
 ---&amp;gt; ffc439c5bec5
Removing intermediate container 15805f4f7685
 ---&amp;gt; 31828faf8ae4
Step 5/6 : CMD [&amp;quot;python&amp;quot;, &amp;quot;app.py&amp;quot;]
 ---&amp;gt; Running in 9d54463b7e84
Removing intermediate container 9d54463b7e84
 ---&amp;gt; 3f9244a1a240
Successfully built 3f9244a1a240
Successfully tagged my-python-app:latest

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can now verify that our image exists on our machine by typing docker images:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker images
REPOSITORY                                 TAG                 IMAGE ID            CREATED             SIZE
my-python-app                             latest              3f9244a1a240        2 minutes ago       355MB$ docker images


&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order to run this newly created image, we can use the docker run command and pass in the ports we want to map to and the image we wish to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -p 8000:5000 -it my-python-app

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p 8000:5000&lt;/code&gt; - This exposes our application which is running on port 8081 within our container on http://localhost:8000 on our local machine.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-it&lt;/code&gt; - This flag specifies that we want to run this image in interactive mode with a tty for this container process.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;my-python-app &lt;/code&gt; - This is the name of the image that we want to run in a container.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Awesome, if we open up http://localhost:8000 within our browser, we should see that our application is successfully responding with &lt;code&gt;Hello, &amp;quot;/&amp;quot;.&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;running-our-container-in-the-background&#34;&gt;Running our Container In the Background&lt;/h1&gt;
&lt;p&gt;You’ll notice that if we &lt;code&gt;ctrl-c&lt;/code&gt; this within the terminal, it will kill the container. If we want to have it run permanently in the background, you can replace -it with &lt;code&gt;-d &lt;/code&gt; to run this container in detached mode.&lt;/p&gt;
&lt;p&gt;In order to view the list of containers running in the background you can use docker ps which should output something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
70fcc9195865        my-python-app    &amp;quot;python app.py&amp;quot;           5 seconds ago       Up 3 seconds        0.0.0.0:8080-&amp;gt;8081/tcp   silly_swirles

&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Dockerize Multi-Container Python App Using Compose</title>
      <link>/docs/communityleaders/eventhandbooks/python/compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/compose/</guid>
      <description>
        
        
        &lt;p&gt;The app fetches the quote of the day from a public API hosted at &lt;a href=&#34;http://quotes.rest&#34;&gt;http://quotes.rest&lt;/a&gt; then it caches the result in Redis. For subsequent API calls, the app will return the result from Redis cache instead of fetching it from the public API&lt;/p&gt;
&lt;p&gt;create following file structure :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python-docker-compose
   ↳ app.py


&lt;/code&gt;&lt;/pre&gt;

 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/python-docker-compose/app.py&#34; download=&#34;/Python/python-docker-compose/app.py&#34;&gt;&lt;code&gt;/Python/python-docker-compose/app.py&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonpython-docker-composeapppy&#39;)&#34; title=&#34;Copy /Python/python-docker-compose/app.py to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonpython-docker-composeapppy&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;flask&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flask&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;datetime&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;datetime&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;requests&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;redis&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;os&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dotenv&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;load_dotenv&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;

&lt;span style=&#34;color:#000&#34;&gt;load_dotenv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# take environment variables from .env.&lt;/span&gt;


&lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flask&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;get_quote_from_api&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;API_URL&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://quotes.rest/qod.json&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;API_URL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;status_code&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;try&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#000&#34;&gt;quote_resp&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;contents&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;quotes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;quote&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;quote_resp&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;KeyError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;IndexError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;None&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;None&lt;/span&gt;


&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@app.route&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Welcome! Please hit the `/qod` API to get the quote of the day.&amp;#34;&lt;/span&gt;


&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@app.route&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/qod&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;quote_of_the_day&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# get today&amp;#39;s date in string&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;strftime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;quote&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;redis_client&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;quote&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
		&lt;span style=&#34;color:#000&#34;&gt;quote&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;get_quote_from_api&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;	
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Quote of the day: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;quote&lt;/span&gt;




&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Connect to redis client&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;redis_host&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;environ&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REDIS_HOST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;redis_port&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;environ&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REDIS_PORT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6379&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;redis_password&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;environ&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REDIS_PASSWORD&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;None&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;redis_client&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;redis&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StrictRedis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;redis_host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;redis_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;redis_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Run the app&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8080&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;



&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;h1 id=&#34;run-python-application&#34;&gt;Run python application&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/docker-community-leaders/dockercommunity/
cd /content/en/examples/Python/python-docker-compose
pip install -r requirements.txt
python app.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On a different terminal run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl http://localhost:8080/qod
The free soul is rare, but you know it when you see it - basically because you feel good, very good, when you are near or with them.
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;dockerize-above-python-application&#34;&gt;Dockerize above Python application&lt;/h1&gt;


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/python-docker-compose/Dockerfile&#34; download=&#34;/Python/python-docker-compose/Dockerfile&#34;&gt;&lt;code&gt;/Python/python-docker-compose/Dockerfile&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonpython-docker-composedockerfile&#39;)&#34; title=&#34;Copy /Python/python-docker-compose/Dockerfile to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonpython-docker-composedockerfile&#34;&gt;
    &lt;pre&gt;&lt;code&gt;# Dockerfile References: https://docs.docker.com/engine/reference/builder/

# Start from python:3.8-alpine base image
FROM python:3.8-alpine

# The latest alpine images don&amp;#39;t have some tools like (`git` and `bash`).
# Adding git, bash and openssh to the image
RUN apk update &amp;amp;&amp;amp; apk upgrade &amp;amp;&amp;amp; \
    apk add --no-cache bash git openssh

# Make dir app
RUN mkdir /app
WORKDIR /app
COPY requirements.txt requirements.txt

RUN pip install -r requirements.txt

# Copy the source from the current directory to the Working Directory inside the container
COPY . .


COPY . .

# Expose port 8080 to the outside world
EXPOSE 8080

# Run the executable
CMD [&amp;#34;python&amp;#34;, &amp;#34;app.py&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;h1 id=&#34;application-services-via-docker-compose&#34;&gt;Application services via Docker Compose&lt;/h1&gt;
&lt;p&gt;Our application consists of two services -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;App service that contains the API to display the “quote of the day”.&lt;/li&gt;
&lt;li&gt;Redis which is used by the app to cache the “quote of the day”.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s define both the services in a &lt;code&gt;docker-compose.yml&lt;/code&gt; file&lt;/p&gt;


 













&lt;div class=&#34;highlight&#34;&gt;
    &lt;div class=&#34;copy-code-icon&#34; style=&#34;text-align:right&#34;&gt;
    &lt;a href=&#34;https://%25!s%28%3cnil%3e%29/master/content/en/examples//Python/python-docker-compose/docker-compose.yml&#34; download=&#34;/Python/python-docker-compose/docker-compose.yml&#34;&gt;&lt;code&gt;/Python/python-docker-compose/docker-compose.yml&lt;/code&gt;
    &lt;/a&gt;
    &lt;img src=&#34;https://raw.githubusercontent.com/docker-community-leaders/dockercommunity/master/static/images/copycode.svg&#34; style=&#34;max-height:24px; cursor: pointer&#34; onclick=&#34;copyCode(&#39;pythonpython-docker-composedocker-composeyml&#39;)&#34; title=&#34;Copy /Python/python-docker-compose/docker-compose.yml to clipboard&#34;&gt;
    &lt;/img&gt;
    &lt;/div&gt;
    &lt;div class=&#34;includecode&#34; id=&#34;pythonpython-docker-composedocker-composeyml&#34;&gt;
    &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Define services&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;services&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# App Service&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Configuration for building the docker image for the service&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;.&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Use an image built from the specified dockerfile in the current directory.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dockerfile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;Dockerfile&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8080:8080&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Forward the exposed port 8080 on the container to port 8080 on the host machine&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;restart&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;unless-stopped&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;depends_on&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- redis&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# This service depends on redis. Start that first.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Pass environment variables to the service&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REDIS_HOST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;redis&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REDIS_PORT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6379&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;networks&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Networks to join (Services on the same network can communicate with each other using their name)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- backend&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Redis Service   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;redis&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;redis:alpine&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Use a public Redis image to build the redis service    &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;restart&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;unless-stopped&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;networks&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- backend&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;networks&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;backend&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;h1 id=&#34;running-the-application-with-docker-compose&#34;&gt;Running the application with docker compose&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;$ docker-compose up
Starting python-docker-compose_redis_1 ... done
Starting python-docker-compose_app_1   ... done
Attaching to python-docker-compose_redis_1, python-docker-compose_app_1
redis_1  | 1:C 02 Feb 2019 12:32:45.791 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis_1  | 1:C 02 Feb 2019 12:32:45.791 # Redis version=5.0.3, bits=64, commit=00000000, modified=0, pid=1, just started
redis_1  | 1:C 02 Feb 2019 12:32:45.791 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
redis_1  | 1:M 02 Feb 2019 12:32:45.792 * Running mode=standalone, port=6379.
redis_1  | 1:M 02 Feb 2019 12:32:45.792 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
redis_1  | 1:M 02 Feb 2019 12:32:45.792 # Server initialized
redis_1  | 1:M 02 Feb 2019 12:32:45.792 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#39;echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled&#39; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
redis_1  | 1:M 02 Feb 2019 12:32:45.793 * DB loaded from disk: 0.000 seconds
redis_1  | 1:M 02 Feb 2019 12:32:45.793 * Ready to accept connections
app_1    | 2019/02/02 12:32:46 Starting Server

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The docker-compose up command starts all the services defined in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.
You can interact with the python service using curl -&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl http://localhost:8080/qod
A show of confidence raises the bar

&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;stopping-all-the-services-with-docker-compose&#34;&gt;Stopping all the services with docker compose&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;$ docker-compose down

&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Addition Resources</title>
      <link>/docs/communityleaders/eventhandbooks/python/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/communityleaders/eventhandbooks/python/resources/</guid>
      <description>
        
        
        &lt;p&gt;Follow the below additional resources which you might find useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://training.play-with-docker.com/&#34;&gt;Play with Docker Training Classroom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/containerized-python-development-part-1/&#34;&gt;Containerize Your Python Developer Environment – Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/containerized-python-development-part-2/&#34;&gt;Containerize Your Python Developer Environment – Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/containerized-python-development-part-3/&#34;&gt;Containerize Your Python Developer Environment – Part 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
