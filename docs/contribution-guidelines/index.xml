<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> – Contribute Code &amp; Content</title>
    <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/</link>
    <description>Recent content in Contribute Code &amp; Content on </description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: How to contribute to Docker documentation</title>
      <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/docs/</guid>
      <description>
        
        
        &lt;p&gt;Thank you so much for your interest in contributing to &lt;a href=&#34;https://docker.com&#34;&gt;Docker&lt;/a&gt; tutorials. Docker has open source in its DNA, and has always worked closely with the community.&lt;/p&gt;
&lt;p&gt;Just a few quick things to be aware of before you get started.&lt;/p&gt;
&lt;p&gt;We welcome issues and pull requests for fixing a problem with an existing tutorial. We are not accepting new tutorials. If you want to contribute new tutorials, please consider contributing to &lt;a href=&#34;https://training.play-with-docker.com&#34;&gt;training.play-with-docker.com&lt;/a&gt; in this repository: &lt;a href=&#34;https://github.com/play-with-docker/play-with-docker.github.io&#34;&gt;https://github.com/play-with-docker/play-with-docker.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anything you contribute will be under an Apache license. Docker will choose which tutorials to accept and reject, and will be able to take any tutorials here and put them in Docker documentation. Likewise, anything posted here may be forked by anyone on GitHub.&lt;/p&gt;
&lt;p&gt;We will be following the lightweight version of the Docker contribution policies and procedures as explained in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com&#34;&gt;Docker documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/moby/moby/blob/master/CONTRIBUTING.md&#34;&gt;Docker engine repo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This largely boils down to &lt;a href=&#34;https://github.com/moby/moby/blob/master/CONTRIBUTING.md#sign-your-work&#34;&gt;signing your PRs&lt;/a&gt;, following the Docker &lt;a href=&#34;https://www.docker.com/trademark-guidelines&#34;&gt;trademark guidelines&lt;/a&gt;, and following the community guidelines.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to contribute to Docker Blog</title>
      <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/blogcontent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/blogcontent/</guid>
      <description>
        
        
        &lt;p&gt;Thank you for your interest in contributing to the Docker Blog. The Docker blog is the place to get the latest on Docker news, technical insights and best practices, community updates and more. It is used to reveal new and updated versions of Docker products, announce major company milestones, hear from our industry friends and partners and act as an educational source for our global community of developers. The Docker Blog has an estimated 340,000 page views per month representing 300,000 unique visitors.  The most popular content that we see is nearly always technical in nature and targeted at developers, often written by developers!&lt;/p&gt;
&lt;p&gt;Once published your content will reach our community of our developers, employees, media, analysts and lookie-loos. Your content should focus on subjects that matter to the Docker community and ecosystem.&lt;/p&gt;
&lt;p&gt;Docker reserves the right to edit and modify any content you submit. We will do our best to communicate any substantive changes, but in the interest of time and expediency, our editorial team will not contact you to correct grammatical mistakes, stylistic errors and/or other minor modifications.&lt;/p&gt;
&lt;p&gt;Here’s a list of general guidelines, policies and contacts.&lt;/p&gt;
&lt;h2 id=&#34;general-guidelines&#34;&gt;General Guidelines&lt;/h2&gt;
&lt;h3 id=&#34;length&#34;&gt;Length&lt;/h3&gt;
&lt;p&gt;Blog posts should aim to be 500-1000 words. But in reality, we don’t have a hard stop. Write just long enough to engage and enrich readers. No more. No less. If your topic needs to be covered in more detail then a multi-part blog series is the way to go (see example here).&lt;/p&gt;
&lt;h3 id=&#34;topics&#34;&gt;Topics&lt;/h3&gt;
&lt;p&gt;Topics we like to see covered include: Docker, containers, container security, product updates, software development trends, how-tos, tutorials, event announcements (including recaps of industry happenings), containers, cloud, cloud platforms (AWS, Google Cloud, Microsoft Azure, etc.), Kubernetes, engineering, product roadmap, community, developer tools, and open source. This list is not exhaustive so feel free to suggest another topic related to Docker.&lt;/p&gt;
&lt;h3 id=&#34;style-and-formatting&#34;&gt;Style and Formatting&lt;/h3&gt;
&lt;p&gt;We don’t have a detailed style guide we require you to follow. However, we do have a handful of basic formatting requests that will make your post easier to read. Write your post with Google Docs. See this template on how you should submit your draft. Include suggested headline, author, social media account and expected publish date. This is the easiest way for us to convert your content into a WordPress post (using our Google Docs and WordPress integrations). Stick to H2 and H3 sub header levels. This helps keep formatting clear and simple. Make all screenshots 1360 pixels wide. Embed all images into the document or provide a link to a ZIP folder.&lt;/p&gt;
&lt;h3 id=&#34;graphics-and-images&#34;&gt;Graphics and images&lt;/h3&gt;
&lt;p&gt;Good use of images will draw readers into your blog posts. Include them. A good rule of thumb is to include at least one graphic per page/post. Be sure to cite the source of your image.&lt;/p&gt;
&lt;h3 id=&#34;headshot&#34;&gt;Headshot&lt;/h3&gt;
&lt;p&gt;If this is your first time blogging on Docker, please submit a picture of yourself. Send it as a JPEG file. As a general rule, WordPress image sizes should be no bigger than 150kb except for large photos. Our platform only shows your name and photo. No bios or links will be included.&lt;/p&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;When writing code, use the Courier New font to let us know that your text must appear as code as we transfer your content to our blog platform.&lt;/p&gt;
&lt;h3 id=&#34;headlines&#34;&gt;Headlines&lt;/h3&gt;
&lt;p&gt;This is harder than you think. Make it catchy, compelling and clickable. Headlines should help people instantly understand why they should read your article just from the title. Stuck? Don’t worry, go ahead and submit your blog and our crack team of editors can help with headline selection.&lt;/p&gt;
&lt;h3 id=&#34;use-headers-and-sub-headers&#34;&gt;Use Headers and Sub headers&lt;/h3&gt;
&lt;p&gt;Headers and sub headers will break up long blog posts, help people scan your blog and convince them to read the post.&lt;/p&gt;
&lt;h3 id=&#34;use-lists&#34;&gt;Use Lists&lt;/h3&gt;
&lt;p&gt;When warranted, numbered lists or bullet-pointed lists help people scan blog posts quickly and find information they’re looking for fast.&lt;/p&gt;
&lt;h3 id=&#34;brevity&#34;&gt;Brevity&lt;/h3&gt;
&lt;p&gt;We aren’t re-writing Windows OS so write in short sentences, break up large blocks of text with bold headings, and bullet your major points.&lt;/p&gt;
&lt;h3 id=&#34;tags&#34;&gt;Tags.&lt;/h3&gt;
&lt;p&gt;Docker tags content. Please suggest keyword tags that should accompany your post.&lt;/p&gt;
&lt;h2 id=&#34;pesky-policies&#34;&gt;Pesky Policies&lt;/h2&gt;
&lt;h3 id=&#34;content-review-process&#34;&gt;Content review process&lt;/h3&gt;
&lt;p&gt;Quality content takes time to edit and prepare, so please allow at least a week for the Docker editorial team review. Note that your content is also being juggled along with Docker-sourced blog content and we are constantly shifting publishing dates of our content to have the maximum impact with our readers. The more lead time you give us on a publishing, the better we can meet your date to push your content.&lt;/p&gt;
&lt;h3 id=&#34;reposting-policy&#34;&gt;Reposting policy&lt;/h3&gt;
&lt;p&gt;We prefer our content to be original and first run. However, if we deem a piece compelling and important, we are happy to repost existing content with links back to original content. We ask that you wait one week before reposting any content submitted to Docker’s blog. When reposting, please cite and link to Docker as the original source.&lt;/p&gt;
&lt;h3 id=&#34;promotional-link-policy&#34;&gt;Promotional link policy&lt;/h3&gt;
&lt;p&gt;We are here to promote benefits to the Docker community. Please refrain from having any personal or affiliated promotional links in your posts. If the promotion is related to an event that needs to be promoted on the topic being discussed in your blog (webinar, event, talk, etc.), feel free to promote away. The point is to avoid self-promotion in the article. If you don’t know what we mean, click here.&lt;/p&gt;
&lt;h3 id=&#34;social-media&#34;&gt;Social media&lt;/h3&gt;
&lt;p&gt;All blog posts on Docker will get a social media promotion on at least one of our three main networks Twitter, Facebook and LinkedIn. Be sure to include your social media profile in your draft post if you’d like us to highlight your handle. Please feel free to amplify as you see fit. If you’d like us to also amplify your personal social media accounts based on the content you submitted please contact our editorial team and we’ll do our best to retweet, share or update any social media you push.&lt;/p&gt;
&lt;h2 id=&#34;examples-of-successful-content&#34;&gt;Examples of Successful Content&lt;/h2&gt;
&lt;p&gt;Here is a list of popular blog posts that performed well. All these blogs have elements of what we outlined above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/containerized-python-development-part-1/&#34;&gt;Containerized Python Development – Part 1&lt;/a&gt;
Note due to length, this post was broken up into three parts.
See &lt;a href=&#34;https://www.docker.com/blog/containerized-python-development-part-2/&#34;&gt;Part 2&lt;/a&gt; and &lt;a href=&#34;https://www.docker.com/blog/containerized-python-development-part-3/&#34;&gt;Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/how-to-use-the-official-nginx-docker-image/&#34;&gt;How To Use the Official NGINX Docker Image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/docker-desktop-wsl-2-best-practices/&#34;&gt;Docker Desktop: WSL 2 Best practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contacts&#34;&gt;Contacts&lt;/h2&gt;
&lt;p&gt;General questions please contact the Editorial Team: &lt;a href=&#34;mailto:press@docker.com&#34;&gt;press@docker.com&lt;/a&gt;
Docker Captains or Docker Community Leaders should contact: &lt;a href=&#34;mailto:william.quiviger@docker.com&#34;&gt;william.quiviger@docker.com&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to contribute to Get Involved Site</title>
      <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/getinvolved/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/getinvolved/</guid>
      <description>
        
        
        &lt;p&gt;Community and participation are the backbone of Docker. Whether you&amp;rsquo;re technical or not, we welcome contributions from anyone around the world. This page is intended for people who want to contribute content to this Docker Community repository docs and who don&amp;rsquo;t use Git or GitHub often. The page is basically a quick guide to get going with a GitHub repository, using either Git on CLI or the GitHub web user interface (UI).&lt;/p&gt;
&lt;h2 id=&#34;using-the-command-line&#34;&gt;Using the command line&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fork/Clone the docker-community-leaders/community repository:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to the docker-community-leaders/dockercommunity on GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click Fork to make your own copy of the repository. GitHub creates a copy at &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt;&lt;your-github-username&gt;/community.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a terminal on your local machine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone your forked repository, to copy the files down to your local machine. This example creates a directory called community and uses SSH cloning to download the files:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;mkdir community
cd community/
git clone git@github.com:&amp;lt;your-github-username&amp;gt;/dockercommunity.git
cd dockercommunity/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;add-the-upstream-repository-as-a-git-remote-repository&#34;&gt;Add the upstream repository as a Git remote repository:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git remote add upstream https://github.com/docker-community-leaders/dockercommunity.git
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;check-your-remotes&#34;&gt;Check your remotes:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git remote -vv
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should have 2 remote repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;origin - points to your own fork of the repository on gitHub - that is, the one you cloned your local repository from.&lt;/li&gt;
&lt;li&gt;upstream - points to the actual repository on gitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create a branch. In this example, replace documentupdates with any branch name you like. Choose a branch name that helps you recognize the updates you plan to make in that branch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout -b documentupdates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add and edit the files as you like. The doc pages are in the /community/content/docs/ directory.&lt;/p&gt;
&lt;p&gt;Run git status at any time, to check the status of your local files. Git tells you which files need adding or committing to your local repository.&lt;/p&gt;
&lt;p&gt;Commit your updated files to your local Git repository. Example commit:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git commit -a -m &amp;quot;Fixed some doc errors.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add add-this-doc.md
git commit -a -m &amp;quot;Added a shiny new doc.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Push from your branch (for example, updates) to the relevant branch on your fork on GitHub:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout documentupdates
git push origin documentsupdates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When you&amp;rsquo;re ready to start the review process, create a pull request (PR) in the branch on your fork on the GitHub UI, based on the above push. The PR is auto-sent to the upstream repository - that is, the one you forked from.&lt;/p&gt;
&lt;p&gt;If you need to change the files in your PR, continue changing them locally in the same branch, then push them again in the same way. GitHub automatically sends them through to the same PR on the upstream repository!&lt;/p&gt;
&lt;p&gt;Hint: If you&amp;rsquo;re authenticating to GitHub via SSH, use ssh-add to add your SSH key passphrase to the managing agent, so that you don&amp;rsquo;t have to keep authenticating to GitHub. You need to do this again after every reboot.&lt;/p&gt;
&lt;h2 id=&#34;using-the-github-web-ui&#34;&gt;Using the GitHub web UI&lt;/h2&gt;
&lt;p&gt;Note: The GitHub web UI is suitable for quick updates to a single file. If your update is more complex or you need to update more than one file within one pull request (PR), then the command line provides a better experience.&lt;/p&gt;
&lt;p&gt;Follow these steps to edit a page using the GitHub UI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sign in to GitHub if you haven&amp;rsquo;t yet done so.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to the page that you want to edit on the Docker Community Site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click Edit this page.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If this is the first time you&amp;rsquo;re updating a file in the Community site repository, a screen opens asking you to fork the repository. A fork is a copy of the repository where you can make your updates before submitting them for review. You only have to fork the repository once:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click Fork this repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If GitHub asks you Where should we fork the site and offers your username as an option, click the link on your username.
Wait a few seconds while GitHub makes a copy of the repository at &lt;a href=&#34;https://github.com/yourusername/community&#34;&gt;https://github.com/yourusername/community&lt;/a&gt;. This copy is your fork of the docker-community-leaders/community repository.&lt;/p&gt;
&lt;p&gt;The GitHub editor interface opens for the selected page. Make your updates to the content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click Preview changes at the top of the editing area to see the effect of your changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need to make more changes, click Edit file at the top of the preview area.&lt;/p&gt;
&lt;p&gt;When you are ready to submit your changes, scroll down to the Propose file change section at the bottom of the editing area.&lt;/p&gt;
&lt;p&gt;Enter a short description of your update. This short description becomes the title of your pull request (PR).&lt;/p&gt;
&lt;p&gt;In the second text box (for the extended description), enter a more detailed description.&lt;/p&gt;
&lt;p&gt;Click Propose file change. A new screen appears, offering you the opportunity to open a pull request.&lt;/p&gt;
&lt;p&gt;Click Create pull request.&lt;/p&gt;
&lt;p&gt;Optionally, edit the pull request title and description.&lt;/p&gt;
&lt;p&gt;Make sure Allow edits from maintainers remains checked.&lt;/p&gt;
&lt;p&gt;Click Create pull request again. You have now sent a request to the repository maintainers to review your change.&lt;/p&gt;
&lt;p&gt;Check the online preview of your changes:&lt;/p&gt;
&lt;p&gt;Wait for the automated PR workflow to do some checks. When it&amp;rsquo;s ready, you should see a comment like this: deploy/netlify — Deploy preview ready!
Click Details to the right of &amp;ldquo;Deploy preview ready&amp;rdquo; to see a preview of your updates.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
