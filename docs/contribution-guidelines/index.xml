<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Contribute Code &amp; Content</title>
    <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/</link>
    <description>Recent content in Contribute Code &amp; Content on </description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: How to contribute to Docker documentation</title>
      <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/docs/</guid>
      <description>
        
        
        &lt;p&gt;Thank you so much for your interest in contributing to &lt;a href=&#34;https://docker.com&#34;&gt;Docker&lt;/a&gt; tutorials. Docker has open source in its DNA, and has always worked closely with the community.&lt;/p&gt;
&lt;p&gt;Just a few quick things to be aware of before you get started.&lt;/p&gt;
&lt;p&gt;We welcome issues and pull requests for fixing a problem with an existing tutorial. We are not accepting new tutorials. If you want to contribute new tutorials, please consider contributing to &lt;a href=&#34;https://training.play-with-docker.com&#34;&gt;training.play-with-docker.com&lt;/a&gt; in this repository: &lt;a href=&#34;https://github.com/play-with-docker/play-with-docker.github.io&#34;&gt;https://github.com/play-with-docker/play-with-docker.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anything you contribute will be under an Apache license. Docker will choose which tutorials to accept and reject, and will be able to take any tutorials here and put them in Docker documentation. Likewise, anything posted here may be forked by anyone on GitHub.&lt;/p&gt;
&lt;p&gt;We will be following the lightweight version of the Docker contribution policies and procedures as explained in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com&#34;&gt;Docker documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/moby/moby/blob/master/CONTRIBUTING.md&#34;&gt;Docker engine repo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This largely boils down to &lt;a href=&#34;https://github.com/moby/moby/blob/master/CONTRIBUTING.md#sign-your-work&#34;&gt;signing your PRs&lt;/a&gt;, following the Docker &lt;a href=&#34;https://www.docker.com/trademark-guidelines&#34;&gt;trademark guidelines&lt;/a&gt;, and following the community guidelines.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to contribute to Moby Project</title>
      <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/moby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/moby/</guid>
      <description>
        
        
        &lt;p&gt;Want to hack on the Moby Project? Awesome! We have a contributor&amp;rsquo;s guide that explains
&lt;a href=&#34;https://github.com/moby/moby/tree/master/docs/contributing&#34;&gt;setting up a development environment and the contribution process&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href=&#34;https://github.com/moby/moby/tree/master/docs/contributing/&#34;&gt;Contributors guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This &lt;a href=&#34;https://github.com/moby/moby/blob/master/CONTRIBUTING.md#moby-community-guidelines&#34;&gt;link&lt;/a&gt; contains information about reporting issues as well as some tips and guidelines useful to experienced open source contributors. Finally, make sure you read our community guidelines before you start participating.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to contribute to Get Involved Site</title>
      <link>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/getinvolved/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker-community-leaders.github.io/dockercommunity/docs/contribution-guidelines/getinvolved/</guid>
      <description>
        
        
        &lt;p&gt;Community and participation are the backbone of Docker. Whether you&amp;rsquo;re technical or not, we welcome contributions from anyone around the world. This page is intended for people who want to contribute content to this Docker Community repository docs and who don&amp;rsquo;t use Git or GitHub often. The page is basically a quick guide to get going with a GitHub repository, using either Git on CLI or the GitHub web user interface (UI).&lt;/p&gt;
&lt;h2 id=&#34;using-the-command-line&#34;&gt;Using the command line&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fork/Clone the docker-community-leaders/community repository:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to the docker-community-leaders/dockercommunity on GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click Fork to make your own copy of the repository. GitHub creates a copy at &lt;a href=&#34;https://github.com/&#34;&gt;https://github.com/&lt;/a&gt;&lt;your-github-username&gt;/community.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a terminal on your local machine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone your forked repository, to copy the files down to your local machine. This example creates a directory called community and uses SSH cloning to download the files:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;mkdir community
cd community/
git clone git@github.com:&amp;lt;your-github-username&amp;gt;/dockercommunity.git
cd dockercommunity/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;add-the-upstream-repository-as-a-git-remote-repository&#34;&gt;Add the upstream repository as a Git remote repository:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git remote add upstream https://github.com/docker-community-leaders/dockercommunity.git
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;check-your-remotes&#34;&gt;Check your remotes:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git remote -vv
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should have 2 remote repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;origin - points to your own fork of the repository on gitHub - that is, the one you cloned your local repository from.&lt;/li&gt;
&lt;li&gt;upstream - points to the actual repository on gitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create a branch. In this example, replace documentupdates with any branch name you like. Choose a branch name that helps you recognize the updates you plan to make in that branch:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout -b documentupdates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add and edit the files as you like. The doc pages are in the /community/content/docs/ directory.&lt;/p&gt;
&lt;p&gt;Run git status at any time, to check the status of your local files. Git tells you which files need adding or committing to your local repository.&lt;/p&gt;
&lt;p&gt;Commit your updated files to your local Git repository. Example commit:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git commit -a -m &amp;quot;Fixed some doc errors.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add add-this-doc.md
git commit -a -m &amp;quot;Added a shiny new doc.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Push from your branch (for example, updates) to the relevant branch on your fork on GitHub:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout documentupdates
git push origin documentsupdates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When you&amp;rsquo;re ready to start the review process, create a pull request (PR) in the branch on your fork on the GitHub UI, based on the above push. The PR is auto-sent to the upstream repository - that is, the one you forked from.&lt;/p&gt;
&lt;p&gt;If you need to change the files in your PR, continue changing them locally in the same branch, then push them again in the same way. GitHub automatically sends them through to the same PR on the upstream repository!&lt;/p&gt;
&lt;p&gt;Hint: If you&amp;rsquo;re authenticating to GitHub via SSH, use ssh-add to add your SSH key passphrase to the managing agent, so that you don&amp;rsquo;t have to keep authenticating to GitHub. You need to do this again after every reboot.&lt;/p&gt;
&lt;h2 id=&#34;using-the-github-web-ui&#34;&gt;Using the GitHub web UI&lt;/h2&gt;
&lt;p&gt;Note: The GitHub web UI is suitable for quick updates to a single file. If your update is more complex or you need to update more than one file within one pull request (PR), then the command line provides a better experience.&lt;/p&gt;
&lt;p&gt;Follow these steps to edit a page using the GitHub UI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sign in to GitHub if you haven&amp;rsquo;t yet done so.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to the page that you want to edit on the Docker Community Site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click Edit this page.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If this is the first time you&amp;rsquo;re updating a file in the Community site repository, a screen opens asking you to fork the repository. A fork is a copy of the repository where you can make your updates before submitting them for review. You only have to fork the repository once:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click Fork this repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If GitHub asks you Where should we fork the site and offers your username as an option, click the link on your username.
Wait a few seconds while GitHub makes a copy of the repository at &lt;a href=&#34;https://github.com/yourusername/community&#34;&gt;https://github.com/yourusername/community&lt;/a&gt;. This copy is your fork of the docker-community-leaders/community repository.&lt;/p&gt;
&lt;p&gt;The GitHub editor interface opens for the selected page. Make your updates to the content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click Preview changes at the top of the editing area to see the effect of your changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need to make more changes, click Edit file at the top of the preview area.&lt;/p&gt;
&lt;p&gt;When you are ready to submit your changes, scroll down to the Propose file change section at the bottom of the editing area.&lt;/p&gt;
&lt;p&gt;Enter a short description of your update. This short description becomes the title of your pull request (PR).&lt;/p&gt;
&lt;p&gt;In the second text box (for the extended description), enter a more detailed description.&lt;/p&gt;
&lt;p&gt;Click Propose file change. A new screen appears, offering you the opportunity to open a pull request.&lt;/p&gt;
&lt;p&gt;Click Create pull request.&lt;/p&gt;
&lt;p&gt;Optionally, edit the pull request title and description.&lt;/p&gt;
&lt;p&gt;Make sure Allow edits from maintainers remains checked.&lt;/p&gt;
&lt;p&gt;Click Create pull request again. You have now sent a request to the repository maintainers to review your change.&lt;/p&gt;
&lt;p&gt;Check the online preview of your changes:&lt;/p&gt;
&lt;p&gt;Wait for the automated PR workflow to do some checks. When it&amp;rsquo;s ready, you should see a comment like this: deploy/netlify â€” Deploy preview ready!
Click Details to the right of &amp;ldquo;Deploy preview ready&amp;rdquo; to see a preview of your updates.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
